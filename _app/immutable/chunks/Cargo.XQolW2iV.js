let r;const o=new Array(128).fill(void 0);o.push(void 0,null,!0,!1);let l=o.length;function a(e){l===o.length&&o.push(o.length+1);const t=l;return l=o[t],o[t]=e,t}function c(e){return o[e]}function F(e){e<132||(o[e]=l,l=e)}function b(e){const t=c(e);return F(e),t}const p=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&p.decode();let _=null;function O(){return(_===null||_.byteLength===0)&&(_=new Uint8Array(r.memory.buffer)),_}function R(e,t){return e=e>>>0,p.decode(O().subarray(e,e+t))}let u=null;function T(){return(u===null||u.byteLength===0)&&(u=new Float32Array(r.memory.buffer)),u}let y=0;function h(e,t){const n=t(e.length*4,4)>>>0;return T().set(e,n/4),y=e.length,n}function x(e,t,n,s,i){const g=h(e,r.__wbindgen_malloc),d=y,j=r.kmeans_wasm(g,d,t,n,s,i);return f.__wrap(j)}function S(e,t,n,s){const i=h(e,r.__wbindgen_malloc),g=y,d=r.dbscan_wasm(i,g,t,n,s);return f.__wrap(d)}const m=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>r.__wbg_clusterresult_free(e>>>0));class f{static __wrap(t){t=t>>>0;const n=Object.create(f.prototype);return n.__wbg_ptr=t,m.register(n,n.__wbg_ptr,n),n}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,m.unregister(this),t}free(){const t=this.__destroy_into_raw();r.__wbg_clusterresult_free(t)}get centroids(){const t=r.clusterresult_centroids(this.__wbg_ptr);return b(t)}get embeddings(){const t=r.clusterresult_embeddings(this.__wbg_ptr);return b(t)}get targets(){const t=r.clusterresult_targets(this.__wbg_ptr);return b(t)}}async function k(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(s){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s);else throw s}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function A(){const e={};return e.wbg={},e.wbg.__wbindgen_memory=function(){const t=r.memory;return a(t)},e.wbg.__wbg_buffer_12d079cc21e14bdb=function(t){const n=c(t).buffer;return a(n)},e.wbg.__wbg_newwithbyteoffsetandlength_4a659d079a1650e0=function(t,n,s){const i=new Float32Array(c(t),n>>>0,s>>>0);return a(i)},e.wbg.__wbindgen_object_drop_ref=function(t){b(t)},e.wbg.__wbg_new_9efabd6b6d2ce46d=function(t){const n=new Float32Array(c(t));return a(n)},e.wbg.__wbg_newwithbyteoffsetandlength_5b893eb727153216=function(t,n,s){const i=new BigInt64Array(c(t),n>>>0,s>>>0);return a(i)},e.wbg.__wbg_new_9d0afd379a2c0df0=function(t){const n=new BigInt64Array(c(t));return a(n)},e.wbg.__wbindgen_throw=function(t,n){throw new Error(R(t,n))},e}function W(e,t){return r=e.exports,w.__wbindgen_wasm_module=t,u=null,_=null,r}function z(e){if(r!==void 0)return r;const t=A();e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e));const n=new WebAssembly.Instance(e,t);return W(n,e)}async function w(e){if(r!==void 0)return r;const t=A();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:s}=await k(await e,t);return W(n,s)}const D=Object.freeze(Object.defineProperty({__proto__:null,ClusterResult:f,dbscan_wasm:S,default:w,initSync:z,kmeans_wasm:x},Symbol.toStringTag,{value:"Module"})),M="_app/immutable/assets/lib_clustering.DbC6mKPf.wasm",E=async(e={})=>{let{importHook:t,serverPath:n,initializeHook:s}=e,i=M;return n!=null&&(i=n+/[^\/\\]*$/.exec(i)[0]),t!=null&&(i=t(i)),s!=null?await s(w,i):await w(i),D},v={wasm_bindgen:{js_path:"./.__rollup-plugin-rust__lib_clustering/index.js",wasm_path:M}};export{v as __META__,E as default};
